<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails on Daniel Pritchett: Blog</title>
    <link>https://www.dpritchett.net/tags/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails on Daniel Pritchett: Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 19 Nov 2014 16:40:55 +0000</lastBuildDate>
    
	<atom:link href="https://www.dpritchett.net/tags/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>I&#39;m Guest Posting on Spree and Neo4j for GraphStory.com</title>
      <link>https://www.dpritchett.net/posts/2014-11-19-im-guest-posting-on-spree-and-neo4j-for-graphstorycom/</link>
      <pubDate>Wed, 19 Nov 2014 16:40:55 +0000</pubDate>
      
      <guid>https://www.dpritchett.net/posts/2014-11-19-im-guest-posting-on-spree-and-neo4j-for-graphstorycom/</guid>
      <description>I&amp;rsquo;ve recently been working with some friends at a local startup called Graph Story. They provide a hosted graph database solution using Neo4j. They are looking to build up some introductory content to help developers get started with graph databases, so I wrote them a series of posts. Here&amp;rsquo;s the first in the series: Graph Kit for Ruby Part 1: Letâ€™s Build a Recommendation Engine for a Spree Store</description>
    </item>
    
    <item>
      <title>Favorite Ruby console tweaks to make my job easier - pry edition</title>
      <link>https://www.dpritchett.net/posts/2013-04-25-favorite-ruby-console-tweaks-to-make-my-job-easier---pry-edition/</link>
      <pubDate>Thu, 25 Apr 2013 16:22:00 +0000</pubDate>
      
      <guid>https://www.dpritchett.net/posts/2013-04-25-favorite-ruby-console-tweaks-to-make-my-job-easier---pry-edition/</guid>
      <description>My current project involves a lot of data coming in from a legacy system. Luckily I have the production web site of the legacy system available to compare against at any time. These two things are helping me out a lot for spot checking.
I put them both in my ~/.pryrc file so that I always have them locally and I don&amp;rsquo;t have to pollute shared codebases with my pet tools.</description>
    </item>
    
  </channel>
</rss>