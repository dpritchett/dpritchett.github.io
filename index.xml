<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Daniel Pritchett</title>
    <link>https://dpritchett.net/</link>
    <description>Recent content on Daniel Pritchett</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 02 Apr 2019 09:32:05 -0500</lastBuildDate>
    
	<atom:link href="https://dpritchett.net/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reading List for Early Career Engineers</title>
      <link>https://dpritchett.net/posts/reading-list-for-early-career-engineers/</link>
      <pubDate>Tue, 02 Apr 2019 09:32:05 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/reading-list-for-early-career-engineers/</guid>
      <description>For the past few years I&amp;rsquo;ve been lucky enough to get to work with #VetsWhoCode, a nonprofit dedicated to training and supporting veterans in transitioning to careers as civilian technologists. Talking with a current mentoring partner has had me suggesting an unreasonable number of interesting books. Each of the books we read help us become better, more capable people but no one&amp;rsquo;s going to have time to read all the books I&amp;rsquo;ve read &amp;mdash; you&amp;rsquo;ve got your own life to live!</description>
    </item>
    
    <item>
      <title>Chatbot Book Available to Order Today!</title>
      <link>https://dpritchett.net/posts/chatbot-book-available-to-order/</link>
      <pubDate>Wed, 23 Jan 2019 14:33:00 -0600</pubDate>
      
      <guid>https://dpritchett.net/posts/chatbot-book-available-to-order/</guid>
      <description>I just shipped the first draft of my multi-year book project a few weeks ago and the beta release is available for download now! Check it out and give me a shout ðŸ˜ƒ
Build Chatbot Interactions: Responsive, Intuitive Interfaces with Ruby  </description>
    </item>
    
    <item>
      <title>Revisiting the Agile Manifesto in a Post-DevOps World</title>
      <link>https://dpritchett.net/posts/revisiting-agile-manifesto-post-devops-world/</link>
      <pubDate>Sun, 21 Oct 2018 14:43:18 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/revisiting-agile-manifesto-post-devops-world/</guid>
      <description>Agile in the age of serverless, &amp;ldquo;cloud native&amp;rdquo;, and continuous delivery I&amp;rsquo;ve been reading through a bunch of lean manufacturing and DevOps literature recently, namely The Goal, The Phoenix Project (again!), and now Continuous Delivery. The Agile Manifesto is referred to a good bit in the latter two texts, and it&amp;rsquo;s gotten me wondering how well the seventeen-year old chestnuts hold up.
Taken as a whole, the manifesto feels timeless and every bit as relevant as it was at the dawn of this new century.</description>
    </item>
    
    <item>
      <title>Stream Live Coding With Twitch</title>
      <link>https://dpritchett.net/posts/stream-live-coding-with-twitch/</link>
      <pubDate>Sun, 22 Apr 2018 13:13:00 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/stream-live-coding-with-twitch/</guid>
      <description>Why Livestream?    So far Twitch streaming&#39;s gotten a good 50 people to check out this book project.   Livestreaming seems primarily popular among gamers but there is a growing niche for programming-oriented livestreams. I&amp;rsquo;m more into programming than gaming at this point in my life, so that&amp;rsquo;s what I&amp;rsquo;m streaming. Returning readers will already know about my upcoming book for the Pragmatic Programmers publishing company on chatbots.</description>
    </item>
    
    <item>
      <title>Research Update: Serverless Computing, Kubernetes, Human Interfaces</title>
      <link>https://dpritchett.net/posts/researching-serverless-computing/</link>
      <pubDate>Fri, 13 Apr 2018 07:20:06 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/researching-serverless-computing/</guid>
      <description>I&amp;rsquo;ve gotten into a lot of research at work and at home. I&amp;rsquo;ll plant a little signpost here to start the log and then push out little updates as the research progresses.
Lambdas and Serverless Functions I wrote more on this for the Clear Function blog at How Can Serverless Functions Help Your Systems?
Here are some of the key quotes:
 Whatâ€™s so great about a serverless function?</description>
    </item>
    
    <item>
      <title>Hearing Aids Are Cool</title>
      <link>https://dpritchett.net/posts/hearing-aids-are-cool/</link>
      <pubDate>Sun, 03 Sep 2017 10:22:25 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/hearing-aids-are-cool/</guid>
      <description>&lt;p&gt;Personal story time! I&amp;rsquo;ve been wearing hearing aids since the 3rd grade. My folks drove me down to Florida State University to get a hearing test and a fitting for some new aids. I lost one of my first pairs in a cardboard box in a cabin in the woods and my parents didn&amp;rsquo;t even kill me. In the intervening 30 years I&amp;rsquo;ve been through a few sets of aids. My first few sets were &lt;a href=&#34;https://www.google.com/search?tbm=isch&amp;amp;amp;q=itc+hearing+aids&#34;&gt;in-the-canal&lt;/a&gt; (ITC) aids. My current set is a behind-the-ear (BTE) set.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Book update: meme generator chapter in progress</title>
      <link>https://dpritchett.net/posts/chatbot-book-update/</link>
      <pubDate>Sun, 13 Aug 2017 18:54:32 -0500</pubDate>
      
      <guid>https://dpritchett.net/posts/chatbot-book-update/</guid>
      <description>Been a fun Sunday afternoon working on my chat bots book. Here&amp;#39;s a sneak preview. I may demo this section at @southeastruby - come say hi! pic.twitter.com/rrZ9aWIg1i
&amp;mdash; Daniel Pritchett (@DPritchett) August 13, 2017</description>
    </item>
    
    <item>
      <title>Get Excited About Southeast Ruby Conference!</title>
      <link>https://dpritchett.net/posts/southeast-ruby-conf/</link>
      <pubDate>Mon, 20 Feb 2017 13:29:12 -0600</pubDate>
      
      <guid>https://dpritchett.net/posts/southeast-ruby-conf/</guid>
      <description>My good buddy and local Ruby luminary Jason Charnes has recently announced that he&amp;rsquo;s bringing the Ruby conference circuit back to Tennessee! Do yourselves a favor and go sign up right now at SoutheastRuby.com!
With Avdi Grimm as the first announced keynote and a cool venue called Ruby in Nashville it&amp;rsquo;s sure to be a godo time. Plus, my personal experience with PyTennessee has convinced me that Nashville is generally a pretty cool spot to spend a weekend.</description>
    </item>
    
    <item>
      <title>The first rule of software projects</title>
      <link>https://dpritchett.net/posts/first-rule-of-software-projects/</link>
      <pubDate>Mon, 21 Nov 2016 12:30:17 -0600</pubDate>
      
      <guid>https://dpritchett.net/posts/first-rule-of-software-projects/</guid>
      <description>Years of building software have convinced me of one very important mantra:
 If we had to ship tomorrow, we could.
 I came by this one the hard way. Remember that software folks are notorious optimists. This is an imprecise discipline we work with. Your six week project might turn into a four month project for perfectly valid reasons. Teams can run out of people or money for various reasons.</description>
    </item>
    
    <item>
      <title>I&#39;m Guest Posting on Spree and Neo4j for GraphStory.com</title>
      <link>https://dpritchett.net/posts/2014-11-19-im-guest-posting-on-spree-and-neo4j-for-graphstorycom/</link>
      <pubDate>Wed, 19 Nov 2014 16:40:55 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2014-11-19-im-guest-posting-on-spree-and-neo4j-for-graphstorycom/</guid>
      <description>I&amp;rsquo;ve recently been working with some friends at a local startup called Graph Story. They provide a hosted graph database solution using Neo4j. They are looking to build up some introductory content to help developers get started with graph databases, so I wrote them a series of posts. Here&amp;rsquo;s the first in the series: Graph Kit for Ruby Part 1: Letâ€™s Build a Recommendation Engine for a Spree Store.</description>
    </item>
    
    <item>
      <title>Two vim tips I hope to actually remember this time</title>
      <link>https://dpritchett.net/posts/2014-06-18-two-vim-tips-i-hope-to-actually-remember-this-time/</link>
      <pubDate>Wed, 18 Jun 2014 13:53:10 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2014-06-18-two-vim-tips-i-hope-to-actually-remember-this-time/</guid>
      <description>Read from an external command into the current buffer :read prints the results of an external command into the current buffer.
Example :read ! cat /etc/passwd will copy the /etc/passwd file into the current buffer.
Pasting yanked text into the command input Yank a word (e.g. yw to yank the word under the cursor) Enter the vim command line via : Ctrl-R, &amp;quot; to paste from the default register.</description>
    </item>
    
    <item>
      <title>Lightweight Spree testing and deployment with Wercker and Heroku</title>
      <link>https://dpritchett.net/posts/2014-02-27-lightweight-spree-testing-and-deployment-with-wercker-and-heroku/</link>
      <pubDate>Thu, 27 Feb 2014 18:49:35 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2014-02-27-lightweight-spree-testing-and-deployment-with-wercker-and-heroku/</guid>
      <description>Continuous deployment to Heroku has been a huge help on my last two projects. You might find it useful too!</description>
    </item>
    
    <item>
      <title>Endless HTTParty retries in Ruby with a simple block</title>
      <link>https://dpritchett.net/posts/2013-07-09-endless-httparty-retries-in-ruby-with-a-simple-block/</link>
      <pubDate>Tue, 09 Jul 2013 17:48:10 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2013-07-09-endless-httparty-retries-in-ruby-with-a-simple-block/</guid>
      <description>See also: A Ruby HOWTO: Writing A Method That Uses Code Blocks
# Simple wrapper to allow retries for HTTP requests - prolongs daemon life. def with_http_retries(&amp;amp;block) begin yield rescue Errno::ECONNREFUSED, SocketError, Net::ReadTimeout DaemonKit.logger.error &amp;quot;Cannot reach [#{@service_url}]. Retrying in #{@retry_seconds} seconds.&amp;quot; sleep @retry_seconds retry end end # DRYing up the connection params @request_params = [@service_url, { headers: { &amp;quot;Authorization&amp;quot; =&amp;gt; &amp;quot;Token token=#{api_key}&amp;quot; }, timeout: 5 }] loop do response = with_http_retries { HTTParty.</description>
    </item>
    
    <item>
      <title>Fixing PostgreSQL after Homebrew upgraded it from 9.1 to 9.2 and I was suddenly unable to access my existing databases</title>
      <link>https://dpritchett.net/posts/2013-07-03-fixing-postgresql-after-homebrew-upgraded-it-from-91-to-92-and-i-was-suddenly-unable-to-access-my-existing-databases/</link>
      <pubDate>Wed, 03 Jul 2013 16:16:00 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2013-07-03-fixing-postgresql-after-homebrew-upgraded-it-from-91-to-92-and-i-was-suddenly-unable-to-access-my-existing-databases/</guid>
      <description>Symptoms  You just rebooted and suddenly PostgreSQL isn&amp;rsquo;t responding Restarting postgres fails due to a &amp;ldquo;Your data files are incompatible with the current version of Postgres&amp;rdquo; error.  Prescription There&amp;rsquo;s a utility that comes with Postgres named pg_upgrade which should sort you out. In order to work it you&amp;rsquo;ll need to create and initialize a new postgres data directory and then call pg_upgrade and pass it paths for the old binaries, new binaries, old data directory, and new data directory.</description>
    </item>
    
    <item>
      <title>Fortune in Golang - Proof of Concept</title>
      <link>https://dpritchett.net/posts/2013-05-13-fortune-in-golang-proof-of-concept/</link>
      <pubDate>Mon, 13 May 2013 15:00:05 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2013-05-13-fortune-in-golang-proof-of-concept/</guid>
      <description>This is what I built at today&amp;rsquo;s Memphis Hackathon. Thanks a billion to the Memphis Makers and their MakerSpace! There is plenty more to learn with Golang - I am just glad to have read some line from a file and split them on a delimiter.
package main import ( &amp;quot;bufio&amp;quot; &amp;quot;fmt&amp;quot; &amp;quot;os&amp;quot; ) func main() { fmt.Println(nthFortune(0)) } func nthFortune(n int) string { filename := &amp;quot;/usr/local/Cellar/fortune/9708/share/games/fortunes/pets&amp;quot; theFile, _ := os.</description>
    </item>
    
    <item>
      <title>Favorite Ruby console tweaks to make my job easier - pry edition</title>
      <link>https://dpritchett.net/posts/2013-04-25-favorite-ruby-console-tweaks-to-make-my-job-easier-pry-edition/</link>
      <pubDate>Thu, 25 Apr 2013 16:22:00 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2013-04-25-favorite-ruby-console-tweaks-to-make-my-job-easier-pry-edition/</guid>
      <description>My current project involves a lot of data coming in from a legacy system. Luckily I have the production web site of the legacy system available to compare against at any time. These two things are helping me out a lot for spot checking.
I put them both in my ~/.pryrc file so that I always have them locally and I don&amp;rsquo;t have to pollute shared codebases with my pet tools.</description>
    </item>
    
    <item>
      <title>_why&#39;s return</title>
      <link>https://dpritchett.net/posts/2013-04-19-whys-return/</link>
      <pubDate>Fri, 19 Apr 2013 01:43:05 +0000</pubDate>
      
      <guid>https://dpritchett.net/posts/2013-04-19-whys-return/</guid>
      <description>&amp;ldquo;If anyone wants to hook their actual printer up to _whyâ€™s queue (which Iâ€™m pretty sure is what he intended), iandennismiller transcribed the OCaml program in SPOOL/HOMEWORK which polls whytheluckystiff.net and sends the PCL files to your printer: https://github.com/cwales/cwales.github.com/pull/4
Itâ€™s quite magical. I was woken up this morning by my printer, when the first pages were being published. Now every 5, 10, or 15 minutes my printer starts clanking away (itâ€™s an old one) and a brand new page slowly emerges.</description>
    </item>
    
    <item>
      <title></title>
      <link>https://dpritchett.net/learning/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dpritchett.net/learning/</guid>
      <description>Act now supplies are limited  .content { color: white; text-align: center; } .embiggen { font-size: xx-large; } .bumper-top { margin-top: 20px; } .bumper-bottom { margin-bottom: 20px; } .content li { margin: 15px; } .content a,.content a:visited { color: blue; } .blinking { animation:blinkingText 0.8s infinite; } .kinetic { font-style: italic; } .spaced { margin: 20px; } @keyframes blinkingText{ 0%{ color: white; } 49%{ color: transparent; } 50%{ color: transparent; } 99%{ color: transparent; } 100%{ color: white; } } /* ============================================================================================== SED Innovations https://sed.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://dpritchett.net/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dpritchett.net/about/</guid>
      <description>Hi there, I&amp;rsquo;m Daniel Pritchett. I help companies build internet-first software for happy customers.
I&amp;rsquo;m working on a book called Natural Language Chatbots: Create Responsive, Intuitive Interfaces in Ruby.
Shoot me an email!</description>
    </item>
    
    <item>
      <title>Books</title>
      <link>https://dpritchett.net/book/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://dpritchett.net/book/</guid>
      <description>I&amp;rsquo;m proud to announce that in Spring 2019 I&amp;rsquo;ve finally finished writing my first book.
Build Chatbot Interactions Responsive, Intuitive Interfaces with Ruby, Building Chatbot Interactions 2019, Pragmatic Bookshelf.
 ðŸ›’ Direct purchase. This is the best way to support the book! You can find both ebook and print copies. Discuss on GoodReads Find a copy on Amazon     The next step in the evolution of user interfaces is here.</description>
    </item>
    
  </channel>
</rss>